{"ast":null,"code":"var _jsxFileName = \"/home/corey/Desktop/SmallCapGaps/frontend/src/components/Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart({\n  gap,\n  intradayData\n}) {\n  _s();\n  const chartContainerRef = useRef();\n  useEffect(() => {\n    if (!gap || !intradayData || intradayData.length === 0) return;\n    const chart = createChart(chartContainerRef.current, {\n      width: 600,\n      height: 300,\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false\n      }\n    });\n    const candlestickSeries = chart.addCandlestickSeries();\n    const formattedData = intradayData.map(item => ({\n      time: new Date(item.timestamp).getTime() / 1000,\n      // Convert to UNIX timestamp in seconds\n      open: item.open,\n      high: item.high,\n      low: item.low,\n      close: item.close\n    }));\n    candlestickSeries.setData(formattedData);\n\n    // Add a marker for the gap\n    const gapTime = new Date(gap.date + 'T09:30:00').getTime() / 1000; // Adjust if necessary\n    candlestickSeries.setMarkers([{\n      time: gapTime,\n      position: 'aboveBar',\n      color: 'red',\n      shape: 'arrowDown',\n      text: 'Gap'\n    }]);\n    chart.timeScale().fitContent();\n    return () => {\n      chart.remove();\n    };\n  }, [gap, intradayData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chartContainerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n}\n_s(Chart, \"ZI1LdXO604IZpmh0kAttG3FSLiA=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useEffect","useRef","createChart","jsxDEV","_jsxDEV","Chart","gap","intradayData","_s","chartContainerRef","length","chart","current","width","height","timeScale","timeVisible","secondsVisible","candlestickSeries","addCandlestickSeries","formattedData","map","item","time","Date","timestamp","getTime","open","high","low","close","setData","gapTime","date","setMarkers","position","color","shape","text","fitContent","remove","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/corey/Desktop/SmallCapGaps/frontend/src/components/Chart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { createChart } from 'lightweight-charts';\n\nfunction Chart({ gap, intradayData }) {\n  const chartContainerRef = useRef();\n\n  useEffect(() => {\n    if (!gap || !intradayData || intradayData.length === 0) return;\n\n    const chart = createChart(chartContainerRef.current, {\n      width: 600,\n      height: 300,\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false,\n      },\n    });\n\n    const candlestickSeries = chart.addCandlestickSeries();\n\n    const formattedData = intradayData.map(item => ({\n      time: new Date(item.timestamp).getTime() / 1000, // Convert to UNIX timestamp in seconds\n      open: item.open,\n      high: item.high,\n      low: item.low,\n      close: item.close,\n    }));\n\n    candlestickSeries.setData(formattedData);\n\n    // Add a marker for the gap\n    const gapTime = new Date(gap.date + 'T09:30:00').getTime() / 1000; // Adjust if necessary\n    candlestickSeries.setMarkers([\n      {\n        time: gapTime,\n        position: 'aboveBar',\n        color: 'red',\n        shape: 'arrowDown',\n        text: 'Gap',\n      },\n    ]);\n\n    chart.timeScale().fitContent();\n\n    return () => {\n      chart.remove();\n    };\n  }, [gap, intradayData]);\n\n  return <div ref={chartContainerRef} />;\n}\n\nexport default Chart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,KAAKA,CAAC;EAAEC,GAAG;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAMC,iBAAiB,GAAGR,MAAM,CAAC,CAAC;EAElCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,GAAG,IAAI,CAACC,YAAY,IAAIA,YAAY,CAACG,MAAM,KAAK,CAAC,EAAE;IAExD,MAAMC,KAAK,GAAGT,WAAW,CAACO,iBAAiB,CAACG,OAAO,EAAE;MACnDC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXC,SAAS,EAAE;QACTC,WAAW,EAAE,IAAI;QACjBC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,MAAMC,iBAAiB,GAAGP,KAAK,CAACQ,oBAAoB,CAAC,CAAC;IAEtD,MAAMC,aAAa,GAAGb,YAAY,CAACc,GAAG,CAACC,IAAI,KAAK;MAC9CC,IAAI,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACG,SAAS,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAI;MAAE;MACjDC,IAAI,EAAEL,IAAI,CAACK,IAAI;MACfC,IAAI,EAAEN,IAAI,CAACM,IAAI;MACfC,GAAG,EAAEP,IAAI,CAACO,GAAG;MACbC,KAAK,EAAER,IAAI,CAACQ;IACd,CAAC,CAAC,CAAC;IAEHZ,iBAAiB,CAACa,OAAO,CAACX,aAAa,CAAC;;IAExC;IACA,MAAMY,OAAO,GAAG,IAAIR,IAAI,CAAClB,GAAG,CAAC2B,IAAI,GAAG,WAAW,CAAC,CAACP,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACnER,iBAAiB,CAACgB,UAAU,CAAC,CAC3B;MACEX,IAAI,EAAES,OAAO;MACbG,QAAQ,EAAE,UAAU;MACpBC,KAAK,EAAE,KAAK;MACZC,KAAK,EAAE,WAAW;MAClBC,IAAI,EAAE;IACR,CAAC,CACF,CAAC;IAEF3B,KAAK,CAACI,SAAS,CAAC,CAAC,CAACwB,UAAU,CAAC,CAAC;IAE9B,OAAO,MAAM;MACX5B,KAAK,CAAC6B,MAAM,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,CAAClC,GAAG,EAAEC,YAAY,CAAC,CAAC;EAEvB,oBAAOH,OAAA;IAAKqC,GAAG,EAAEhC;EAAkB;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxC;AAACrC,EAAA,CA/CQH,KAAK;AAAAyC,EAAA,GAALzC,KAAK;AAiDd,eAAeA,KAAK;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}