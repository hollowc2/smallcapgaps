{"ast":null,"code":"var _jsxFileName = \"/home/corey/Desktop/SmallCapGaps/frontend/src/components/IntradayChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IntradayChart({\n  gap,\n  intradayData\n}) {\n  _s();\n  const chartContainerRef = useRef();\n  useEffect(() => {\n    if (!gap || !intradayData || intradayData.length === 0) return;\n    const chart = createChart(chartContainerRef.current, {\n      width: 600,\n      height: 300,\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false\n      }\n    });\n    const candlestickSeries = chart.addCandlestickSeries();\n    const formattedData = intradayData.map(item => ({\n      time: new Date(item.datetime).getTime() / 1000,\n      open: parseFloat(item.open),\n      high: parseFloat(item.high),\n      low: parseFloat(item.low),\n      close: parseFloat(item.close)\n    }));\n    candlestickSeries.setData(formattedData);\n    const gapIndex = formattedData.findIndex(item => new Date(item.time * 1000).toISOString() === gap.datetime);\n    const rangeStart = Math.max(0, gapIndex - 30);\n    const rangeEnd = Math.min(formattedData.length - 1, gapIndex + 30);\n    chart.timeScale().setVisibleRange({\n      from: formattedData[rangeStart].time,\n      to: formattedData[rangeEnd].time\n    });\n    return () => {\n      chart.remove();\n    };\n  }, [gap, intradayData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chartContainerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n}\n_s(IntradayChart, \"ZI1LdXO604IZpmh0kAttG3FSLiA=\");\n_c = IntradayChart;\nexport default IntradayChart;\nvar _c;\n$RefreshReg$(_c, \"IntradayChart\");","map":{"version":3,"names":["React","useEffect","useRef","createChart","jsxDEV","_jsxDEV","IntradayChart","gap","intradayData","_s","chartContainerRef","length","chart","current","width","height","timeScale","timeVisible","secondsVisible","candlestickSeries","addCandlestickSeries","formattedData","map","item","time","Date","datetime","getTime","open","parseFloat","high","low","close","setData","gapIndex","findIndex","toISOString","rangeStart","Math","max","rangeEnd","min","setVisibleRange","from","to","remove","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/corey/Desktop/SmallCapGaps/frontend/src/components/IntradayChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { createChart } from 'lightweight-charts';\n\nfunction IntradayChart({ gap, intradayData }) {\n  const chartContainerRef = useRef();\n\n  useEffect(() => {\n    if (!gap || !intradayData || intradayData.length === 0) return;\n\n    const chart = createChart(chartContainerRef.current, {\n      width: 600,\n      height: 300,\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false,\n      },\n    });\n\n    const candlestickSeries = chart.addCandlestickSeries();\n\n    const formattedData = intradayData.map(item => ({\n      time: new Date(item.datetime).getTime() / 1000,\n      open: parseFloat(item.open),\n      high: parseFloat(item.high),\n      low: parseFloat(item.low),\n      close: parseFloat(item.close),\n    }));\n\n    candlestickSeries.setData(formattedData);\n\n\n\n    const gapIndex = formattedData.findIndex(item => \n      new Date(item.time * 1000).toISOString() === gap.datetime\n    );\n    const rangeStart = Math.max(0, gapIndex - 30);\n    const rangeEnd = Math.min(formattedData.length - 1, gapIndex + 30);\n    \n    chart.timeScale().setVisibleRange({\n      from: formattedData[rangeStart].time,\n      to: formattedData[rangeEnd].time,\n    });\n\n    return () => {\n      chart.remove();\n    };\n  }, [gap, intradayData]);\n\n  return <div ref={chartContainerRef} />;\n}\n\nexport default IntradayChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,aAAaA,CAAC;EAAEC,GAAG;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAMC,iBAAiB,GAAGR,MAAM,CAAC,CAAC;EAElCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,GAAG,IAAI,CAACC,YAAY,IAAIA,YAAY,CAACG,MAAM,KAAK,CAAC,EAAE;IAExD,MAAMC,KAAK,GAAGT,WAAW,CAACO,iBAAiB,CAACG,OAAO,EAAE;MACnDC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXC,SAAS,EAAE;QACTC,WAAW,EAAE,IAAI;QACjBC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,MAAMC,iBAAiB,GAAGP,KAAK,CAACQ,oBAAoB,CAAC,CAAC;IAEtD,MAAMC,aAAa,GAAGb,YAAY,CAACc,GAAG,CAACC,IAAI,KAAK;MAC9CC,IAAI,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACG,QAAQ,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAI;MAC9CC,IAAI,EAAEC,UAAU,CAACN,IAAI,CAACK,IAAI,CAAC;MAC3BE,IAAI,EAAED,UAAU,CAACN,IAAI,CAACO,IAAI,CAAC;MAC3BC,GAAG,EAAEF,UAAU,CAACN,IAAI,CAACQ,GAAG,CAAC;MACzBC,KAAK,EAAEH,UAAU,CAACN,IAAI,CAACS,KAAK;IAC9B,CAAC,CAAC,CAAC;IAEHb,iBAAiB,CAACc,OAAO,CAACZ,aAAa,CAAC;IAIxC,MAAMa,QAAQ,GAAGb,aAAa,CAACc,SAAS,CAACZ,IAAI,IAC3C,IAAIE,IAAI,CAACF,IAAI,CAACC,IAAI,GAAG,IAAI,CAAC,CAACY,WAAW,CAAC,CAAC,KAAK7B,GAAG,CAACmB,QACnD,CAAC;IACD,MAAMW,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEL,QAAQ,GAAG,EAAE,CAAC;IAC7C,MAAMM,QAAQ,GAAGF,IAAI,CAACG,GAAG,CAACpB,aAAa,CAACV,MAAM,GAAG,CAAC,EAAEuB,QAAQ,GAAG,EAAE,CAAC;IAElEtB,KAAK,CAACI,SAAS,CAAC,CAAC,CAAC0B,eAAe,CAAC;MAChCC,IAAI,EAAEtB,aAAa,CAACgB,UAAU,CAAC,CAACb,IAAI;MACpCoB,EAAE,EAAEvB,aAAa,CAACmB,QAAQ,CAAC,CAAChB;IAC9B,CAAC,CAAC;IAEF,OAAO,MAAM;MACXZ,KAAK,CAACiC,MAAM,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,CAACtC,GAAG,EAAEC,YAAY,CAAC,CAAC;EAEvB,oBAAOH,OAAA;IAAKyC,GAAG,EAAEpC;EAAkB;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxC;AAACzC,EAAA,CA9CQH,aAAa;AAAA6C,EAAA,GAAb7C,aAAa;AAgDtB,eAAeA,aAAa;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}