{"ast":null,"code":"var _jsxFileName = \"/home/corey/Desktop/Smallcapgaps/smallcapgaps/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchForm from './components/SearchForm';\nimport GapList from './components/GapList';\nimport Chart from './components/Chart';\nimport IntradayChart from './components/IntradayChart';\nimport './App.css';\nimport { fetchGapData, fetchDailyData, fetchIntradayData, fetchTickerStats } from './api';\nimport { v4 as uuidv4 } from 'uuid'; // Ensure uuid is installed: npm install uuid\nimport { DateTime } from 'luxon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gapData, setGapData] = useState([]);\n  const [expandedGaps, setExpandedGaps] = useState({}); // { [gapId]: gapObject }\n  const [loading, setLoading] = useState(false); // State for loading\n  const [error, setError] = useState(null); // State for errors\n\n  const handleSearch = async searchParams => {\n    console.log('Searching with params:', searchParams);\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await fetchGapData(searchParams);\n\n      // Fetch ticker stats for each gap\n      const gapsWithStats = await Promise.all(data.map(async gap => {\n        const stats = await fetchTickerStats(gap.ticker);\n        return {\n          ...gap,\n          tickerStats: stats[0]\n        }; // Assuming the API returns an array\n      }));\n      const sortedData = gapsWithStats.sort((a, b) => b.gap_percent - a.gap_percent).map(gap => ({\n        ...gap,\n        id: uuidv4()\n      }));\n      setGapData(sortedData);\n      setExpandedGaps({});\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to fetch data.');\n      setGapData([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGapSelect = async gap => {\n    console.log('Gap clicked:', gap);\n\n    // Toggle expansion\n    if (expandedGaps[gap.id]) {\n      // If already expanded, collapse it\n      const newExpandedGaps = {\n        ...expandedGaps\n      };\n      delete newExpandedGaps[gap.id];\n      setExpandedGaps(newExpandedGaps);\n      return;\n    }\n\n    // If the gap already has the necessary data, expand it\n    if (gap.daily_data && gap.intraday_data) {\n      setExpandedGaps(prev => ({\n        ...prev,\n        [gap.id]: gap\n      }));\n      return;\n    }\n\n    // Else, fetch the missing data\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        ticker,\n        date\n      } = gap;\n      if (!ticker || !date) {\n        console.warn('Gap lacks ticker or date, cannot fetch data.');\n        setError('Selected gap lacks ticker or date, unable to fetch data.');\n        return;\n      }\n      const dailyData = await fetchDailyData({\n        ticker,\n        start_date: date,\n        end_date: date\n      });\n      console.log('Fetched Daily Data:', dailyData);\n      const intradayData = await fetchIntradayData({\n        ticker,\n        date\n      });\n      console.log('Fetched Intraday Data:', intradayData);\n      const updatedGap = {\n        ...gap,\n        daily_data: dailyData,\n        intraday_data: intradayData\n      };\n      setGapData(prevGaps => prevGaps.map(g => g.id === gap.id ? updatedGap : g));\n      setExpandedGaps(prev => ({\n        ...prev,\n        [gap.id]: updatedGap\n      }));\n    } catch (error) {\n      console.error('Error fetching additional data for the selected gap:', error);\n      setError('Failed to fetch additional data for the selected gap.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Small Cap Gaps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(GapList, {\n      gaps: gapData,\n      onSelectGap: handleGapSelect,\n      expandedGaps: expandedGaps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7kiLNDsPQeZKkaHvamJWWme2je8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchForm","GapList","Chart","IntradayChart","fetchGapData","fetchDailyData","fetchIntradayData","fetchTickerStats","v4","uuidv4","DateTime","jsxDEV","_jsxDEV","App","_s","gapData","setGapData","expandedGaps","setExpandedGaps","loading","setLoading","error","setError","handleSearch","searchParams","console","log","data","gapsWithStats","Promise","all","map","gap","stats","ticker","tickerStats","sortedData","sort","a","b","gap_percent","id","handleGapSelect","newExpandedGaps","daily_data","intraday_data","prev","date","warn","dailyData","start_date","end_date","intradayData","updatedGap","prevGaps","g","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","gaps","onSelectGap","_c","$RefreshReg$"],"sources":["/home/corey/Desktop/Smallcapgaps/smallcapgaps/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SearchForm from './components/SearchForm';\nimport GapList from './components/GapList';\nimport Chart from './components/Chart';\nimport IntradayChart from './components/IntradayChart';\nimport './App.css';\nimport { fetchGapData, fetchDailyData, fetchIntradayData, fetchTickerStats } from './api';\nimport { v4 as uuidv4 } from 'uuid'; // Ensure uuid is installed: npm install uuid\nimport { DateTime } from 'luxon';\n\nfunction App() {\n  const [gapData, setGapData] = useState([]);\n  const [expandedGaps, setExpandedGaps] = useState({}); // { [gapId]: gapObject }\n  const [loading, setLoading] = useState(false); // State for loading\n  const [error, setError] = useState(null); // State for errors\n\n  const handleSearch = async (searchParams) => {\n    console.log('Searching with params:', searchParams);\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await fetchGapData(searchParams);\n      \n      // Fetch ticker stats for each gap\n      const gapsWithStats = await Promise.all(data.map(async (gap) => {\n        const stats = await fetchTickerStats(gap.ticker);\n        return { ...gap, tickerStats: stats[0] }; // Assuming the API returns an array\n      }));\n      \n      const sortedData = gapsWithStats\n        .sort((a, b) => b.gap_percent - a.gap_percent)\n        .map(gap => ({ ...gap, id: uuidv4() }));\n      \n      setGapData(sortedData);\n      setExpandedGaps({});\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to fetch data.');\n      setGapData([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGapSelect = async (gap) => {\n    console.log('Gap clicked:', gap);\n    \n    // Toggle expansion\n    if (expandedGaps[gap.id]) {\n      // If already expanded, collapse it\n      const newExpandedGaps = { ...expandedGaps };\n      delete newExpandedGaps[gap.id];\n      setExpandedGaps(newExpandedGaps);\n      return;\n    }\n\n    // If the gap already has the necessary data, expand it\n    if (gap.daily_data && gap.intraday_data) {\n      setExpandedGaps(prev => ({ ...prev, [gap.id]: gap }));\n      return;\n    }\n\n    // Else, fetch the missing data\n    try {\n      setLoading(true);\n      setError(null);\n\n      const { ticker, date } = gap;\n\n      if (!ticker || !date) {\n        console.warn('Gap lacks ticker or date, cannot fetch data.');\n        setError('Selected gap lacks ticker or date, unable to fetch data.');\n        return;\n      }\n\n      const dailyData = await fetchDailyData({ ticker, start_date: date, end_date: date });\n      console.log('Fetched Daily Data:', dailyData);\n\n      const intradayData = await fetchIntradayData({ ticker, date });\n      console.log('Fetched Intraday Data:', intradayData);\n\n      const updatedGap = { \n        ...gap, \n        daily_data: dailyData, \n        intraday_data: intradayData \n      };\n\n      setGapData(prevGaps => prevGaps.map(g => g.id === gap.id ? updatedGap : g));\n      setExpandedGaps(prev => ({ ...prev, [gap.id]: updatedGap }));\n    } catch (error) {\n      console.error('Error fetching additional data for the selected gap:', error);\n      setError('Failed to fetch additional data for the selected gap.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Small Cap Gaps</h1>\n      <SearchForm onSearch={handleSearch} />\n      \n      {loading && <p>Loading...</p>}\n      {error && <p className=\"error\">{error}</p>}\n      \n      <GapList \n        gaps={gapData} \n        onSelectGap={handleGapSelect} \n        expandedGaps={expandedGaps} \n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}