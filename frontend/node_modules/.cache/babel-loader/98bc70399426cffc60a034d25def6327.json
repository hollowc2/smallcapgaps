{"ast":null,"code":"var _jsxFileName = \"/home/corey/Desktop/SmallCapGaps/frontend/src/components/IntradayChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { createChart, ColorType } from 'lightweight-charts';\nimport { DateTime } from 'luxon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IntradayChart({\n  gap,\n  data\n}) {\n  _s();\n  const chartContainerRef = useRef();\n  useEffect(() => {\n    console.log('Rendering IntradayChart with data:', data);\n    if (!gap || !data || data.length === 0) return;\n    const chart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 300,\n      layout: {\n        background: {\n          color: '#ffffff'\n        },\n        textColor: '#333'\n      },\n      grid: {\n        vertLines: {\n          color: '#f0f0f0'\n        },\n        horzLines: {\n          color: '#f0f0f0'\n        }\n      },\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false,\n        tickMarkFormatter: time => {\n          const date = DateTime.fromSeconds(time).setZone('America/Los_Angeles');\n          return date.toFormat('HH:mm');\n        }\n      }\n    });\n    const candlestickSeries = chart.addCandlestickSeries();\n    const formattedData = data.map(item => ({\n      time: DateTime.fromMillis(item.timestamp).setZone('America/Los_Angeles').toSeconds(),\n      open: item.open,\n      high: item.high,\n      low: item.low,\n      close: item.close\n    }));\n    candlestickSeries.setData(formattedData);\n\n    // Add premarket area\n    const preMarketSeries = chart.addAreaSeries({\n      topColor: 'rgba(208, 228, 255, 0.5)',\n      bottomColor: 'rgba(208, 228, 255, 0.5)',\n      lineColor: 'rgba(208, 228, 255, 0.5)',\n      lineWidth: 0\n    });\n\n    // Add aftermarket area\n    const afterMarketSeries = chart.addAreaSeries({\n      topColor: 'rgba(255, 235, 205, 0.5)',\n      bottomColor: 'rgba(255, 235, 205, 0.5)',\n      lineColor: 'rgba(255, 235, 205, 0.5)',\n      lineWidth: 0\n    });\n\n    // Generate premarket and aftermarket data\n    const preMarketData = [];\n    const afterMarketData = [];\n    formattedData.forEach(item => {\n      const dateTime = DateTime.fromSeconds(item.time).setZone('America/Los_Angeles');\n      const hour = dateTime.hour;\n      if (hour < 6.5) {\n        // Before 6:30 AM\n        preMarketData.push({\n          time: item.time,\n          value: chart.priceScale('right').coordinateToPrice(0)\n        });\n        preMarketData.push({\n          time: item.time,\n          value: chart.priceScale('right').coordinateToPrice(chart.height())\n        });\n      } else if (hour >= 13) {\n        // After 1:00 PM\n        afterMarketData.push({\n          time: item.time,\n          value: chart.priceScale('right').coordinateToPrice(0)\n        });\n        afterMarketData.push({\n          time: item.time,\n          value: chart.priceScale('right').coordinateToPrice(chart.height())\n        });\n      }\n    });\n    preMarketSeries.setData(preMarketData);\n    afterMarketSeries.setData(afterMarketData);\n    chart.timeScale().fitContent();\n    const handleResize = () => {\n      chart.applyOptions({\n        width: chartContainerRef.current.clientWidth\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      chart.remove();\n    };\n  }, [gap, data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chartContainerRef,\n    className: \"ChartContainer\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 10\n  }, this);\n}\n_s(IntradayChart, \"ZI1LdXO604IZpmh0kAttG3FSLiA=\");\n_c = IntradayChart;\nexport default IntradayChart;\nvar _c;\n$RefreshReg$(_c, \"IntradayChart\");","map":{"version":3,"names":["React","useEffect","useRef","createChart","ColorType","DateTime","jsxDEV","_jsxDEV","IntradayChart","gap","data","_s","chartContainerRef","console","log","length","chart","current","width","clientWidth","height","layout","background","color","textColor","grid","vertLines","horzLines","timeScale","timeVisible","secondsVisible","tickMarkFormatter","time","date","fromSeconds","setZone","toFormat","candlestickSeries","addCandlestickSeries","formattedData","map","item","fromMillis","timestamp","toSeconds","open","high","low","close","setData","preMarketSeries","addAreaSeries","topColor","bottomColor","lineColor","lineWidth","afterMarketSeries","preMarketData","afterMarketData","forEach","dateTime","hour","push","value","priceScale","coordinateToPrice","fitContent","handleResize","applyOptions","window","addEventListener","removeEventListener","remove","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/corey/Desktop/SmallCapGaps/frontend/src/components/IntradayChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { createChart, ColorType } from 'lightweight-charts';\nimport { DateTime } from 'luxon';\n\nfunction IntradayChart({ gap, data }) {\n  const chartContainerRef = useRef();\n\n  useEffect(() => {\n    console.log('Rendering IntradayChart with data:', data);\n    if (!gap || !data || data.length === 0) return;\n\n    const chart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 300,\n      layout: {\n        background: { color: '#ffffff' },\n        textColor: '#333',\n      },\n      grid: {\n        vertLines: { color: '#f0f0f0' },\n        horzLines: { color: '#f0f0f0' },\n      },\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false,\n        tickMarkFormatter: (time) => {\n          const date = DateTime.fromSeconds(time).setZone('America/Los_Angeles');\n          return date.toFormat('HH:mm');\n        },\n      },\n    });\n\n    const candlestickSeries = chart.addCandlestickSeries();\n\n    const formattedData = data.map(item => ({\n      time: DateTime.fromMillis(item.timestamp).setZone('America/Los_Angeles').toSeconds(),\n      open: item.open,\n      high: item.high,\n      low: item.low,\n      close: item.close,\n    }));\n\n    candlestickSeries.setData(formattedData);\n\n    // Add premarket area\n    const preMarketSeries = chart.addAreaSeries({\n      topColor: 'rgba(208, 228, 255, 0.5)',\n      bottomColor: 'rgba(208, 228, 255, 0.5)',\n      lineColor: 'rgba(208, 228, 255, 0.5)',\n      lineWidth: 0,\n    });\n\n    // Add aftermarket area\n    const afterMarketSeries = chart.addAreaSeries({\n      topColor: 'rgba(255, 235, 205, 0.5)',\n      bottomColor: 'rgba(255, 235, 205, 0.5)',\n      lineColor: 'rgba(255, 235, 205, 0.5)',\n      lineWidth: 0,\n    });\n\n    // Generate premarket and aftermarket data\n    const preMarketData = [];\n    const afterMarketData = [];\n\n    formattedData.forEach(item => {\n      const dateTime = DateTime.fromSeconds(item.time).setZone('America/Los_Angeles');\n      const hour = dateTime.hour;\n\n      if (hour < 6.5) { // Before 6:30 AM\n        preMarketData.push({ time: item.time, value: chart.priceScale('right').coordinateToPrice(0) });\n        preMarketData.push({ time: item.time, value: chart.priceScale('right').coordinateToPrice(chart.height()) });\n      } else if (hour >= 13) { // After 1:00 PM\n        afterMarketData.push({ time: item.time, value: chart.priceScale('right').coordinateToPrice(0) });\n        afterMarketData.push({ time: item.time, value: chart.priceScale('right').coordinateToPrice(chart.height()) });\n      }\n    });\n\n    preMarketSeries.setData(preMarketData);\n    afterMarketSeries.setData(afterMarketData);\n\n    chart.timeScale().fitContent();\n\n    const handleResize = () => {\n      chart.applyOptions({ width: chartContainerRef.current.clientWidth });\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      chart.remove();\n    };\n  }, [gap, data]);\n\n  return <div ref={chartContainerRef} className=\"ChartContainer\" />;\n}\n\nexport default IntradayChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}