{"ast":null,"code":"var _jsxFileName = \"/home/corey/Desktop/SmallCapGaps/frontend/src/components/IntradayChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport { DateTime } from 'luxon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IntradayChart({\n  gap,\n  data\n}) {\n  _s();\n  const chartContainerRef = useRef();\n  const [chartSize, setChartSize] = useState({\n    width: 0,\n    height: 400\n  });\n\n  // Debug: Log props\n  useEffect(() => {\n    console.log('IntradayChart Props:', {\n      gap,\n      data\n    });\n  }, [gap, data]);\n  useEffect(() => {\n    const updateSize = () => {\n      if (chartContainerRef.current) {\n        setChartSize({\n          width: chartContainerRef.current.clientWidth,\n          height: chartContainerRef.current.clientHeight\n        });\n      }\n    };\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  useEffect(() => {\n    console.log('Rendering IntradayChart with data:', data);\n    if (!gap || !data || data.length === 0 || chartSize.width === 0) {\n      console.warn('IntradayChart: Missing or empty data.');\n      return;\n    }\n    const chart = createChart(chartContainerRef.current, {\n      width: chartSize.width,\n      height: chartSize.height,\n      layout: {\n        background: {\n          color: '#ffffff'\n        },\n        textColor: '#333'\n      },\n      grid: {\n        vertLines: {\n          color: '#f0f0f0'\n        },\n        horzLines: {\n          color: '#f0f0f0'\n        }\n      },\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false,\n        tickMarkFormatter: time => {\n          const date = DateTime.fromSeconds(time).setZone('America/Los_Angeles');\n          return date.toFormat('HH:mm');\n        }\n      },\n      rightPriceScale: {\n        scaleMargins: {\n          top: 0.1,\n          bottom: 0.25 // Adjusted for better spacing\n        }\n      }\n    });\n    const lineSeries = chart.addLineSeries({\n      color: '#2196F3',\n      lineWidth: 2\n    });\n\n    // Ensure data is in the correct format\n    const formattedData = data.map(item => {\n      if (typeof item.time === 'string') {\n        // If time is a string, parse it to a Unix timestamp\n        const timestamp = DateTime.fromISO(item.time).toSeconds();\n        return {\n          time: timestamp,\n          value: item.value\n        };\n      } else if (typeof item.time === 'number') {\n        // If time is already a number (Unix timestamp), use it as is\n        return item;\n      } else {\n        console.warn('Invalid time format:', item.time);\n        return null;\n      }\n    }).filter(Boolean); // Remove any null entries\n\n    console.log('Formatted data:', formattedData);\n    if (formattedData.length > 0) {\n      lineSeries.setData(formattedData);\n      chart.timeScale().fitContent();\n    } else {\n      console.warn('No valid data points after formatting');\n    }\n    return () => {\n      chart.remove();\n    };\n  }, [gap, data, chartSize]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chartContainerRef,\n    className: \"ChartContainer\",\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 10\n  }, this);\n}\n_s(IntradayChart, \"PZjrL+1nUWtCITRo33DKU7CpnAA=\");\n_c = IntradayChart;\nexport default IntradayChart;\nvar _c;\n$RefreshReg$(_c, \"IntradayChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","createChart","DateTime","jsxDEV","_jsxDEV","IntradayChart","gap","data","_s","chartContainerRef","chartSize","setChartSize","width","height","console","log","updateSize","current","clientWidth","clientHeight","window","addEventListener","removeEventListener","length","warn","chart","layout","background","color","textColor","grid","vertLines","horzLines","timeScale","timeVisible","secondsVisible","tickMarkFormatter","time","date","fromSeconds","setZone","toFormat","rightPriceScale","scaleMargins","top","bottom","lineSeries","addLineSeries","lineWidth","formattedData","map","item","timestamp","fromISO","toSeconds","value","filter","Boolean","setData","fitContent","remove","ref","className","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/corey/Desktop/SmallCapGaps/frontend/src/components/IntradayChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport { DateTime } from 'luxon';\n\nfunction IntradayChart({ gap, data }) {\n  const chartContainerRef = useRef();\n  const [chartSize, setChartSize] = useState({ width: 0, height: 400 });\n\n  // Debug: Log props\n  useEffect(() => {\n    console.log('IntradayChart Props:', { gap, data });\n  }, [gap, data]);\n\n  useEffect(() => {\n    const updateSize = () => {\n      if (chartContainerRef.current) {\n        setChartSize({\n          width: chartContainerRef.current.clientWidth,\n          height: chartContainerRef.current.clientHeight\n        });\n      }\n    };\n\n    window.addEventListener('resize', updateSize);\n    updateSize();\n\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  useEffect(() => {\n    console.log('Rendering IntradayChart with data:', data);\n    if (!gap || !data || data.length === 0 || chartSize.width === 0) {\n      console.warn('IntradayChart: Missing or empty data.');\n      return;\n    }\n\n    const chart = createChart(chartContainerRef.current, {\n      width: chartSize.width,\n      height: chartSize.height,\n      layout: {\n        background: { color: '#ffffff' },\n        textColor: '#333',\n      },\n      grid: {\n        vertLines: { color: '#f0f0f0' },\n        horzLines: { color: '#f0f0f0' },\n      },\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false,\n        tickMarkFormatter: (time) => {\n          const date = DateTime.fromSeconds(time).setZone('America/Los_Angeles');\n          return date.toFormat('HH:mm');\n        },\n      },\n      rightPriceScale: {\n        scaleMargins: {\n          top: 0.1,\n          bottom: 0.25, // Adjusted for better spacing\n        },\n      },\n    });\n\n    const lineSeries = chart.addLineSeries({\n      color: '#2196F3',\n      lineWidth: 2,\n    });\n\n    // Ensure data is in the correct format\n    const formattedData = data.map(item => {\n      if (typeof item.time === 'string') {\n        // If time is a string, parse it to a Unix timestamp\n        const timestamp = DateTime.fromISO(item.time).toSeconds();\n        return { time: timestamp, value: item.value };\n      } else if (typeof item.time === 'number') {\n        // If time is already a number (Unix timestamp), use it as is\n        return item;\n      } else {\n        console.warn('Invalid time format:', item.time);\n        return null;\n      }\n    }).filter(Boolean); // Remove any null entries\n\n    console.log('Formatted data:', formattedData);\n\n    if (formattedData.length > 0) {\n      lineSeries.setData(formattedData);\n      chart.timeScale().fitContent();\n    } else {\n      console.warn('No valid data points after formatting');\n    }\n\n    return () => {\n      chart.remove();\n    };\n  }, [gap, data, chartSize]);\n\n  return <div ref={chartContainerRef} className=\"ChartContainer\" style={{ width: '100%', height: '100%' }} />;\n}\n\nexport default IntradayChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}