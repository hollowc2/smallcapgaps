{"ast":null,"code":"var _jsxFileName = \"/home/corey/Desktop/SmallCapGaps/frontend/src/components/IntradayChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport { DateTime } from 'luxon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IntradayChart({\n  gap,\n  data\n}) {\n  _s();\n  const chartContainerRef = useRef();\n  const [chartSize, setChartSize] = useState({\n    width: 0,\n    height: 400\n  });\n  useEffect(() => {\n    const updateSize = () => {\n      if (chartContainerRef.current) {\n        setChartSize({\n          width: chartContainerRef.current.clientWidth - 10,\n          // Subtract 10px for safety\n          height: 400\n        });\n      }\n    };\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  useEffect(() => {\n    console.log('Rendering IntradayChart with data:', data);\n    if (!gap || !data || data.length === 0 || chartSize.width === 0) return;\n    const chart = createChart(chartContainerRef.current, {\n      width: chartSize.width,\n      height: chartSize.height,\n      layout: {\n        background: {\n          color: '#ffffff'\n        },\n        textColor: '#333'\n      },\n      grid: {\n        vertLines: {\n          color: '#f0f0f0'\n        },\n        horzLines: {\n          color: '#f0f0f0'\n        }\n      },\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false,\n        tickMarkFormatter: time => {\n          const date = DateTime.fromSeconds(time).setZone('America/Los_Angeles');\n          return date.toFormat('HH:mm');\n        }\n      },\n      rightPriceScale: {\n        autoScale: true,\n        scaleMargins: {\n          top: 0.1,\n          // Increase this value to add more buffer at the top\n          bottom: 0.2\n        }\n      }\n    });\n    const candlestickSeries = chart.addCandlestickSeries();\n\n    // Modify pre-market and after-market shading\n    const preMarketSeries = chart.addAreaSeries({\n      topColor: 'rgba(200, 200, 200, 0.3)',\n      bottomColor: 'rgba(200, 200, 200, 0.3)',\n      lineColor: 'rgba(200, 200, 200, 0.3)',\n      lineWidth: 0,\n      priceScaleId: '',\n      // This makes the series not attached to any price scale\n      scaleMargins: {\n        top: 0,\n        bottom: 0\n      }\n    });\n    const afterMarketSeries = chart.addAreaSeries({\n      topColor: 'rgba(200, 200, 200, 0.3)',\n      bottomColor: 'rgba(200, 200, 200, 0.3)',\n      lineColor: 'rgba(200, 200, 200, 0.3)',\n      lineWidth: 0,\n      priceScaleId: '',\n      // This makes the series not attached to any price scale\n      scaleMargins: {\n        top: 0,\n        bottom: 0\n      }\n    });\n\n    // VWAP series (previously VWAP2)\n    const vwapSeries = chart.addLineSeries({\n      color: 'rgba(128, 0, 128, 0.8)',\n      // Purple color\n      lineWidth: 2,\n      priceScaleId: 'right'\n    });\n\n    // Add EMA series\n    const emaSeries = chart.addLineSeries({\n      color: 'rgba(255, 82, 82, 0.8)',\n      lineWidth: 2,\n      priceScaleId: 'right'\n    });\n    const formattedData = data.map(item => ({\n      time: DateTime.fromMillis(item.timestamp).setZone('America/Los_Angeles').toSeconds(),\n      open: item.open,\n      high: item.high,\n      low: item.low,\n      close: item.close,\n      volume: item.volume\n    }));\n\n    // Generate pre-market and after-market shading data\n    const {\n      preMarketData,\n      afterMarketData\n    } = generateMarketHoursData(formattedData, chart);\n\n    // Calculate VWAP\n    const vwapData = calculateVWAP(formattedData);\n    console.log('VWAP Data:', vwapData);\n\n    // Calculate 10-period EMA\n    const emaData = calculateEMA(formattedData, 10);\n    candlestickSeries.setData(formattedData);\n    preMarketSeries.setData(preMarketData);\n    afterMarketSeries.setData(afterMarketData);\n    vwapSeries.setData(vwapData);\n    emaSeries.setData(emaData);\n    chart.timeScale().fitContent();\n    const handleResize = () => {\n      const newWidth = chartContainerRef.current.clientWidth - 10; // Subtract 10px for safety\n      chart.applyOptions({\n        width: newWidth,\n        height: chartSize.height\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      chart.remove();\n    };\n  }, [gap, data, chartSize]);\n\n  // Add this function outside the useEffect hook\n  const calculateVWAP = data => {\n    let cumulativePV = 0;\n    let cumulativeVolume = 0;\n    return data.map(item => {\n      const typicalPrice = (item.high + item.low + item.close) / 3;\n      cumulativePV += typicalPrice * item.volume;\n      cumulativeVolume += item.volume;\n      const vwap = cumulativePV / cumulativeVolume;\n      return {\n        time: item.time,\n        value: vwap\n      };\n    });\n  };\n\n  // Add this function outside the useEffect hook\n  const calculateEMA = (data, period) => {\n    const k = 2 / (period + 1);\n    let ema = data[0].close;\n    return data.map((item, index) => {\n      if (index === 0) {\n        return {\n          time: item.time,\n          value: ema\n        };\n      }\n      ema = (item.close - ema) * k + ema;\n      return {\n        time: item.time,\n        value: ema\n      };\n    });\n  };\n\n  // Modify this function outside the useEffect hook\n  const generateMarketHoursData = (data, chart) => {\n    const preMarketData = [];\n    const afterMarketData = [];\n\n    // Get the price range of the entire dataset\n    const priceRange = data.reduce((range, item) => {\n      range.min = Math.min(range.min, item.low);\n      range.max = Math.max(range.max, item.high);\n      return range;\n    }, {\n      min: Infinity,\n      max: -Infinity\n    });\n\n    // Add a small buffer to ensure full coverage\n    const buffer = (priceRange.max - priceRange.min) * 1;\n    const yMin = priceRange.min - buffer;\n    const yMax = priceRange.max + buffer;\n    data.forEach(item => {\n      const date = DateTime.fromSeconds(item.time).setZone('America/Los_Angeles');\n      const hour = date.hour;\n      const minute = date.minute;\n      if (hour < 6 || hour === 6 && minute < 30) {\n        preMarketData.push({\n          time: item.time,\n          value: yMin\n        });\n        preMarketData.push({\n          time: item.time,\n          value: yMax\n        });\n      } else if (hour >= 13) {\n        afterMarketData.push({\n          time: item.time,\n          value: yMin\n        });\n        afterMarketData.push({\n          time: item.time,\n          value: yMax\n        });\n      }\n    });\n    return {\n      preMarketData,\n      afterMarketData\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chartContainerRef,\n    className: \"ChartContainer\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 10\n  }, this);\n}\n_s(IntradayChart, \"YX/zBzlSz/NJ2zehErZrlZhe+ts=\");\n_c = IntradayChart;\nexport default IntradayChart;\nvar _c;\n$RefreshReg$(_c, \"IntradayChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","createChart","DateTime","jsxDEV","_jsxDEV","IntradayChart","gap","data","_s","chartContainerRef","chartSize","setChartSize","width","height","updateSize","current","clientWidth","window","addEventListener","removeEventListener","console","log","length","chart","layout","background","color","textColor","grid","vertLines","horzLines","timeScale","timeVisible","secondsVisible","tickMarkFormatter","time","date","fromSeconds","setZone","toFormat","rightPriceScale","autoScale","scaleMargins","top","bottom","candlestickSeries","addCandlestickSeries","preMarketSeries","addAreaSeries","topColor","bottomColor","lineColor","lineWidth","priceScaleId","afterMarketSeries","vwapSeries","addLineSeries","emaSeries","formattedData","map","item","fromMillis","timestamp","toSeconds","open","high","low","close","volume","preMarketData","afterMarketData","generateMarketHoursData","vwapData","calculateVWAP","emaData","calculateEMA","setData","fitContent","handleResize","newWidth","applyOptions","remove","cumulativePV","cumulativeVolume","typicalPrice","vwap","value","period","k","ema","index","priceRange","reduce","range","min","Math","max","Infinity","buffer","yMin","yMax","forEach","hour","minute","push","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/corey/Desktop/SmallCapGaps/frontend/src/components/IntradayChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport { DateTime } from 'luxon';\n\nfunction IntradayChart({ gap, data }) {\n  const chartContainerRef = useRef();\n  const [chartSize, setChartSize] = useState({ width: 0, height: 400 });\n\n  useEffect(() => {\n    const updateSize = () => {\n      if (chartContainerRef.current) {\n        setChartSize({\n          width: chartContainerRef.current.clientWidth - 10, // Subtract 10px for safety\n          height: 400\n        });\n      }\n    };\n\n    window.addEventListener('resize', updateSize);\n    updateSize();\n\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  useEffect(() => {\n    console.log('Rendering IntradayChart with data:', data);\n    if (!gap || !data || data.length === 0 || chartSize.width === 0) return;\n\n    const chart = createChart(chartContainerRef.current, {\n      width: chartSize.width,\n      height: chartSize.height,\n      layout: {\n        background: { color: '#ffffff' },\n        textColor: '#333',\n      },\n      grid: {\n        vertLines: { color: '#f0f0f0' },\n        horzLines: { color: '#f0f0f0' },\n      },\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false,\n        tickMarkFormatter: (time) => {\n          const date = DateTime.fromSeconds(time).setZone('America/Los_Angeles');\n          return date.toFormat('HH:mm');\n        },\n      },\n      rightPriceScale: {\n        autoScale: true,\n        scaleMargins: {\n          top: 0.1,  // Increase this value to add more buffer at the top\n          bottom: 0.2,\n        },\n      },\n    });\n\n    const candlestickSeries = chart.addCandlestickSeries();\n    \n    // Modify pre-market and after-market shading\n    const preMarketSeries = chart.addAreaSeries({\n      topColor: 'rgba(200, 200, 200, 0.3)',\n      bottomColor: 'rgba(200, 200, 200, 0.3)',\n      lineColor: 'rgba(200, 200, 200, 0.3)',\n      lineWidth: 0,\n      priceScaleId: '', // This makes the series not attached to any price scale\n      scaleMargins: {\n        top: 0,\n        bottom: 0,\n      },\n    });\n\n    const afterMarketSeries = chart.addAreaSeries({\n      topColor: 'rgba(200, 200, 200, 0.3)',\n      bottomColor: 'rgba(200, 200, 200, 0.3)',\n      lineColor: 'rgba(200, 200, 200, 0.3)',\n      lineWidth: 0,\n      priceScaleId: '', // This makes the series not attached to any price scale\n      scaleMargins: {\n        top: 0,\n        bottom: 0,\n      },\n    });\n\n    // VWAP series (previously VWAP2)\n    const vwapSeries = chart.addLineSeries({\n      color: 'rgba(128, 0, 128, 0.8)', // Purple color\n      lineWidth: 2,\n      priceScaleId: 'right',\n    });\n\n    // Add EMA series\n    const emaSeries = chart.addLineSeries({\n      color: 'rgba(255, 82, 82, 0.8)',\n      lineWidth: 2,\n      priceScaleId: 'right',\n    });\n\n    const formattedData = data.map(item => ({\n      time: DateTime.fromMillis(item.timestamp).setZone('America/Los_Angeles').toSeconds(),\n      open: item.open,\n      high: item.high,\n      low: item.low,\n      close: item.close,\n      volume: item.volume,\n    }));\n\n    // Generate pre-market and after-market shading data\n    const { preMarketData, afterMarketData } = generateMarketHoursData(formattedData, chart);\n\n    // Calculate VWAP\n    const vwapData = calculateVWAP(formattedData);\n\n    console.log('VWAP Data:', vwapData);\n\n    // Calculate 10-period EMA\n    const emaData = calculateEMA(formattedData, 10);\n\n    candlestickSeries.setData(formattedData);\n    preMarketSeries.setData(preMarketData);\n    afterMarketSeries.setData(afterMarketData);\n    vwapSeries.setData(vwapData);\n    emaSeries.setData(emaData);\n\n    chart.timeScale().fitContent();\n\n    const handleResize = () => {\n      const newWidth = chartContainerRef.current.clientWidth - 10; // Subtract 10px for safety\n      chart.applyOptions({ \n        width: newWidth,\n        height: chartSize.height \n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      chart.remove();\n    };\n  }, [gap, data, chartSize]);\n\n  // Add this function outside the useEffect hook\n  const calculateVWAP = (data) => {\n    let cumulativePV = 0;\n    let cumulativeVolume = 0;\n\n    return data.map((item) => {\n      const typicalPrice = (item.high + item.low + item.close) / 3;\n      cumulativePV += typicalPrice * item.volume;\n      cumulativeVolume += item.volume;\n      const vwap = cumulativePV / cumulativeVolume;\n\n      return {\n        time: item.time,\n        value: vwap\n      };\n    });\n  };\n\n  // Add this function outside the useEffect hook\n  const calculateEMA = (data, period) => {\n    const k = 2 / (period + 1);\n    let ema = data[0].close;\n    \n    return data.map((item, index) => {\n      if (index === 0) {\n        return { time: item.time, value: ema };\n      }\n      ema = (item.close - ema) * k + ema;\n      return { time: item.time, value: ema };\n    });\n  };\n\n  // Modify this function outside the useEffect hook\n  const generateMarketHoursData = (data, chart) => {\n    const preMarketData = [];\n    const afterMarketData = [];\n    \n    // Get the price range of the entire dataset\n    const priceRange = data.reduce((range, item) => {\n      range.min = Math.min(range.min, item.low);\n      range.max = Math.max(range.max, item.high);\n      return range;\n    }, { min: Infinity, max: -Infinity });\n\n    // Add a small buffer to ensure full coverage\n    const buffer = (priceRange.max - priceRange.min) * 1;\n    const yMin = priceRange.min - buffer;\n    const yMax = priceRange.max + buffer;\n    \n    data.forEach((item) => {\n      const date = DateTime.fromSeconds(item.time).setZone('America/Los_Angeles');\n      const hour = date.hour;\n      const minute = date.minute;\n\n      if (hour < 6 || (hour === 6 && minute < 30)) {\n        preMarketData.push({ time: item.time, value: yMin });\n        preMarketData.push({ time: item.time, value: yMax });\n      } else if (hour >= 13) {\n        afterMarketData.push({ time: item.time, value: yMin });\n        afterMarketData.push({ time: item.time, value: yMax });\n      }\n    });\n\n    return { preMarketData, afterMarketData };\n  };\n\n  return <div ref={chartContainerRef} className=\"ChartContainer\" />;\n}\n\nexport default IntradayChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}