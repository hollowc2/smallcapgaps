{"ast":null,"code":"var _jsxFileName = \"/home/corey/Desktop/SmallCapGaps/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchForm from './components/SearchForm';\nimport GapList from './components/GapList';\nimport Chart from './components/Chart';\nimport IntradayChart from './components/IntradayChart';\nimport './App.css';\nimport { fetchGapData } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gapData, setGapData] = useState([]);\n  const [selectedGap, setSelectedGap] = useState(null);\n  const [expandedGap, setExpandedGap] = useState(null);\n  const handleSearch = async searchParams => {\n    console.log('Searching with params:', searchParams);\n    try {\n      const data = await fetchGapData(searchParams);\n      console.log('Received data:', data);\n      setGapData(data);\n    } catch (error) {\n      console.error('Error fetching gap data:', error);\n      // Handle error (e.g., set error state)\n    }\n  };\n  const handleGapToggle = gap => {\n    if (expandedGap && expandedGap.ticker === gap.ticker && expandedGap.date === gap.date) {\n      setExpandedGap(null);\n    } else {\n      setExpandedGap(gap);\n      setSelectedGap(gap);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Small Cap Gaps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), gapData.map((gap, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gap-item\",\n      children: [/*#__PURE__*/_jsxDEV(GapList, {\n        gaps: [gap],\n        onSelectGap: handleGapToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), expandedGap && expandedGap.ticker === gap.ticker && expandedGap.date === gap.date && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-container\",\n        children: [/*#__PURE__*/_jsxDEV(Chart, {\n          gap: expandedGap,\n          data: expandedGap.daily_data,\n          options: {\n            width: 450,\n            height: 300\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(IntradayChart, {\n          gap: expandedGap,\n          data: expandedGap.intraday_data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, `${gap.ticker}-${gap.date}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Pntdx9ZeZ1agIs/rU9qQ6VI98cA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchForm","GapList","Chart","IntradayChart","fetchGapData","jsxDEV","_jsxDEV","App","_s","gapData","setGapData","selectedGap","setSelectedGap","expandedGap","setExpandedGap","handleSearch","searchParams","console","log","data","error","handleGapToggle","gap","ticker","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","map","index","gaps","onSelectGap","daily_data","options","width","height","intraday_data","_c","$RefreshReg$"],"sources":["/home/corey/Desktop/SmallCapGaps/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SearchForm from './components/SearchForm';\nimport GapList from './components/GapList';\nimport Chart from './components/Chart';\nimport IntradayChart from './components/IntradayChart';\nimport './App.css';\nimport { fetchGapData } from './api';\n\nfunction App() {\n  const [gapData, setGapData] = useState([]);\n  const [selectedGap, setSelectedGap] = useState(null);\n  const [expandedGap, setExpandedGap] = useState(null);\n\n  const handleSearch = async (searchParams) => {\n    console.log('Searching with params:', searchParams);\n    try {\n      const data = await fetchGapData(searchParams);\n      console.log('Received data:', data);\n      setGapData(data);\n    } catch (error) {\n      console.error('Error fetching gap data:', error);\n      // Handle error (e.g., set error state)\n    }\n  };\n\n  const handleGapToggle = (gap) => {\n    if (expandedGap && expandedGap.ticker === gap.ticker && expandedGap.date === gap.date) {\n      setExpandedGap(null);\n    } else {\n      setExpandedGap(gap);\n      setSelectedGap(gap);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Small Cap Gaps</h1>\n      <SearchForm onSearch={handleSearch} />\n      {gapData.map((gap, index) => (\n        <div key={`${gap.ticker}-${gap.date}`} className=\"gap-item\">\n          <GapList gaps={[gap]} onSelectGap={handleGapToggle} />\n          {expandedGap && expandedGap.ticker === gap.ticker && expandedGap.date === gap.date && (\n            <div className=\"charts-container\">\n              <Chart gap={expandedGap} data={expandedGap.daily_data} options={{ width: 450, height: 300 }} />\n              <IntradayChart gap={expandedGap} data={expandedGap.intraday_data} />\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}