{"ast":null,"code":"var _jsxFileName = \"/home/corey/Desktop/SmallCapGaps/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchForm from './components/SearchForm';\nimport GapList from './components/GapList';\nimport Chart from './components/Chart';\nimport IntradayChart from './components/IntradayChart';\nimport './App.css';\nimport { fetchGapData, fetchDailyData, fetchIntradayData } from './api';\nimport { v4 as uuidv4 } from 'uuid'; // Ensure uuid is installed: npm install uuid\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gapData, setGapData] = useState([]);\n  const [selectedGap, setSelectedGap] = useState(null);\n  const [loading, setLoading] = useState(false); // New state for loading\n  const [error, setError] = useState(null); // New state for errors\n\n  const handleSearch = async searchParams => {\n    console.log('Searching with params:', searchParams);\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await fetchGapData(searchParams);\n      console.log('Received data:', data);\n\n      // Sort the data by gap_percent in descending order and assign unique IDs\n      const sortedData = data.sort((a, b) => b.gap_percent - a.gap_percent).map(gap => ({\n        ...gap,\n        id: uuidv4()\n      })); // Assign unique ID\n\n      setGapData(sortedData);\n      setSelectedGap(null); // Reset selected gap on new search\n    } catch (error) {\n      console.error('Error fetching gap data:', error);\n      setError('Failed to fetch gap data.');\n      setGapData([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGapSelect = async gap => {\n    console.log('Gap clicked:', gap);\n\n    // Toggle selection if the same gap is clicked\n    if (selectedGap && selectedGap.id === gap.id) {\n      setSelectedGap(null);\n      return;\n    }\n\n    // If the gap already has the necessary data, select it\n    if (gap.daily_data && gap.intraday_data) {\n      setSelectedGap(gap);\n      return;\n    }\n\n    // Else, fetch the missing data\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        ticker,\n        date\n      } = gap;\n\n      // Validate that ticker and date are available\n      if (!ticker || !date) {\n        console.warn('Gap lacks ticker or date, cannot fetch data.');\n        setError('Selected gap lacks ticker or date, unable to fetch data.');\n        setSelectedGap(null);\n        return;\n      }\n\n      // Fetch daily data\n      const dailyData = await fetchDailyData({\n        ticker,\n        start_date: date,\n        end_date: date\n      });\n\n      // Fetch intraday data\n      const intradayData = await fetchIntradayData({\n        ticker,\n        date\n      });\n\n      // Update the gap with the fetched data\n      const updatedGap = {\n        ...gap,\n        daily_data: dailyData,\n        intraday_data: intradayData\n      };\n\n      // Update the gapData state with the updated gap\n      setGapData(prevGaps => prevGaps.map(g => g.id === gap.id ? updatedGap : g));\n\n      // Set the selected gap\n      setSelectedGap(updatedGap);\n    } catch (error) {\n      console.error('Error fetching additional data for the selected gap:', error);\n      setError('Failed to fetch additional data for the selected gap.');\n      setSelectedGap(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Small Cap Gaps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(GapList, {\n      gaps: gapData,\n      onSelectGap: handleGapSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), selectedGap && selectedGap.daily_data && selectedGap.intraday_data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          gap: selectedGap,\n          data: selectedGap.daily_data,\n          options: {\n            width: 600,\n            height: 400\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(IntradayChart, {\n          gap: selectedGap,\n          data: selectedGap.intraday_data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : selectedGap ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Selected gap does not have sufficient data to display charts.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nAC8010xIwveggC28EPfZIq7hZ4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchForm","GapList","Chart","IntradayChart","fetchGapData","fetchDailyData","fetchIntradayData","v4","uuidv4","jsxDEV","_jsxDEV","App","_s","gapData","setGapData","selectedGap","setSelectedGap","loading","setLoading","error","setError","handleSearch","searchParams","console","log","data","sortedData","sort","a","b","gap_percent","map","gap","id","handleGapSelect","daily_data","intraday_data","ticker","date","warn","dailyData","start_date","end_date","intradayData","updatedGap","prevGaps","g","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","gaps","onSelectGap","options","width","height","_c","$RefreshReg$"],"sources":["/home/corey/Desktop/SmallCapGaps/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SearchForm from './components/SearchForm';\nimport GapList from './components/GapList';\nimport Chart from './components/Chart';\nimport IntradayChart from './components/IntradayChart';\nimport './App.css';\nimport { fetchGapData, fetchDailyData, fetchIntradayData } from './api';\nimport { v4 as uuidv4 } from 'uuid'; // Ensure uuid is installed: npm install uuid\n\nfunction App() {\n  const [gapData, setGapData] = useState([]);\n  const [selectedGap, setSelectedGap] = useState(null);\n  const [loading, setLoading] = useState(false); // New state for loading\n  const [error, setError] = useState(null); // New state for errors\n\n  const handleSearch = async (searchParams) => {\n    console.log('Searching with params:', searchParams);\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await fetchGapData(searchParams);\n      console.log('Received data:', data);\n      \n      // Sort the data by gap_percent in descending order and assign unique IDs\n      const sortedData = data\n        .sort((a, b) => b.gap_percent - a.gap_percent)\n        .map(gap => ({ ...gap, id: uuidv4() })); // Assign unique ID\n      \n      setGapData(sortedData);\n      setSelectedGap(null); // Reset selected gap on new search\n    } catch (error) {\n      console.error('Error fetching gap data:', error);\n      setError('Failed to fetch gap data.');\n      setGapData([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGapSelect = async (gap) => {\n    console.log('Gap clicked:', gap);\n    \n    // Toggle selection if the same gap is clicked\n    if (selectedGap && selectedGap.id === gap.id) {\n      setSelectedGap(null);\n      return;\n    }\n\n    // If the gap already has the necessary data, select it\n    if (gap.daily_data && gap.intraday_data) {\n      setSelectedGap(gap);\n      return;\n    }\n\n    // Else, fetch the missing data\n    try {\n      setLoading(true);\n      setError(null);\n\n      const { ticker, date } = gap;\n\n      // Validate that ticker and date are available\n      if (!ticker || !date) {\n        console.warn('Gap lacks ticker or date, cannot fetch data.');\n        setError('Selected gap lacks ticker or date, unable to fetch data.');\n        setSelectedGap(null);\n        return;\n      }\n\n      // Fetch daily data\n      const dailyData = await fetchDailyData({ ticker, start_date: date, end_date: date });\n\n      // Fetch intraday data\n      const intradayData = await fetchIntradayData({ ticker, date });\n\n      // Update the gap with the fetched data\n      const updatedGap = { ...gap, daily_data: dailyData, intraday_data: intradayData };\n\n      // Update the gapData state with the updated gap\n      setGapData(prevGaps => prevGaps.map(g => g.id === gap.id ? updatedGap : g));\n\n      // Set the selected gap\n      setSelectedGap(updatedGap);\n    } catch (error) {\n      console.error('Error fetching additional data for the selected gap:', error);\n      setError('Failed to fetch additional data for the selected gap.');\n      setSelectedGap(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Small Cap Gaps</h1>\n      <SearchForm onSearch={handleSearch} />\n      \n      {loading && <p>Loading...</p>}\n      {error && <p className=\"error\">{error}</p>}\n      \n      <GapList gaps={gapData} onSelectGap={handleGapSelect} />\n      \n      {selectedGap && selectedGap.daily_data && selectedGap.intraday_data ? (\n        <div className=\"charts-container\">\n          <div className=\"chart-wrapper\">\n            <Chart gap={selectedGap} data={selectedGap.daily_data} options={{ width: 600, height: 400 }} />\n          </div>\n          <div className=\"chart-wrapper\">\n            <IntradayChart gap={selectedGap} data={selectedGap.intraday_data} />\n          </div>\n        </div>\n      ) : selectedGap ? (\n        <p>Selected gap does not have sufficient data to display charts.</p>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}