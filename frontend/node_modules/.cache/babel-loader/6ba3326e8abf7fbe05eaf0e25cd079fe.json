{"ast":null,"code":"var _jsxFileName = \"/home/corey/Desktop/SmallCapGaps/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SearchForm from './components/SearchForm';\nimport GapList from './components/GapList';\nimport Chart from './components/Chart';\nimport IntradayChart from './components/IntradayChart';\nimport './App.css';\nimport { fetchGapData, fetchDailyData } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gaps, setGaps] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchGaps();\n  }, []);\n  const fetchGaps = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const gapData = await fetchGapData(/* your search params */);\n      setGaps(gapData);\n    } catch (err) {\n      setError('Failed to fetch gap data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSelectGap = async gap => {\n    if (gap.dailyData && gap.intradayData) return; // Data already loaded\n\n    try {\n      const dailyData = await fetchDailyData({\n        ticker: gap.ticker,\n        start_date: gap.start_date,\n        end_date: gap.end_date\n      });\n      const intradayData = await fetchIntradayData(gap.ticker, gap.date);\n      setGaps(gaps.map(g => g.ticker === gap.ticker && g.date === gap.date ? {\n        ...g,\n        dailyData,\n        intradayData\n      } : g));\n    } catch (err) {\n      console.error('Failed to fetch chart data', err);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gap Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      onSearch: fetchGaps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GapList, {\n      gaps: gaps,\n      onSelectGap: handleSelectGap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rRTzwET8MUh0UpN3vIC0DFO/d1g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchForm","GapList","Chart","IntradayChart","fetchGapData","fetchDailyData","jsxDEV","_jsxDEV","App","_s","gaps","setGaps","loading","setLoading","error","setError","fetchGaps","gapData","err","handleSelectGap","gap","dailyData","intradayData","ticker","start_date","end_date","fetchIntradayData","date","map","g","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSearch","onSelectGap","_c","$RefreshReg$"],"sources":["/home/corey/Desktop/SmallCapGaps/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchForm from './components/SearchForm';\nimport GapList from './components/GapList';\nimport Chart from './components/Chart';\nimport IntradayChart from './components/IntradayChart';\nimport './App.css';\nimport { fetchGapData, fetchDailyData } from './api';\n\nfunction App() {\n  const [gaps, setGaps] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchGaps();\n  }, []);\n\n  const fetchGaps = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const gapData = await fetchGapData(/* your search params */);\n      setGaps(gapData);\n    } catch (err) {\n      setError('Failed to fetch gap data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSelectGap = async (gap) => {\n    if (gap.dailyData && gap.intradayData) return; // Data already loaded\n\n    try {\n      const dailyData = await fetchDailyData({\n        ticker: gap.ticker,\n        start_date: gap.start_date,\n        end_date: gap.end_date\n      });\n      const intradayData = await fetchIntradayData(gap.ticker, gap.date);\n\n      setGaps(gaps.map(g => \n        g.ticker === gap.ticker && g.date === gap.date\n          ? { ...g, dailyData, intradayData }\n          : g\n      ));\n    } catch (err) {\n      console.error('Failed to fetch chart data', err);\n    }\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div className=\"App\">\n      <h1>Gap Analysis</h1>\n      <SearchForm onSearch={fetchGaps} />\n      <GapList gaps={gaps} onSelectGap={handleSelectGap} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}