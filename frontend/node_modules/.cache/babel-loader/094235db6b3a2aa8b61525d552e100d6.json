{"ast":null,"code":"var _jsxFileName = \"/home/corey/Desktop/Smallcapgaps/smallcapgaps/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchForm from './components/SearchForm';\nimport GapList from './components/GapList';\nimport Chart from './components/Chart';\nimport IntradayChart from './components/IntradayChart';\nimport './App.css';\nimport { fetchGapData, fetchDailyData, fetchIntradayData } from './api';\nimport { v4 as uuidv4 } from 'uuid'; // Ensure uuid is installed: npm install uuid\nimport { DateTime } from 'luxon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gapData, setGapData] = useState([]);\n  const [expandedGaps, setExpandedGaps] = useState({}); // { [gapId]: gapObject }\n  const [loading, setLoading] = useState(false); // State for loading\n  const [error, setError] = useState(null); // State for errors\n\n  const handleSearch = async searchParams => {\n    console.log('Searching with params:', searchParams);\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await fetchGapData(searchParams);\n      console.log('Received data:', data);\n\n      // Sort the data by gap_percent in descending order and assign unique IDs\n      const sortedData = data.sort((a, b) => b.gap_percent - a.gap_percent).map(gap => ({\n        ...gap,\n        id: uuidv4()\n      })); // Assign unique ID\n\n      setGapData(sortedData);\n      setExpandedGaps({}); // Reset expanded gaps on new search\n    } catch (error) {\n      console.error('Error fetching gap data:', error);\n      setError('Failed to fetch gap data.');\n      setGapData([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGapSelect = async gap => {\n    console.log('Gap clicked:', gap);\n\n    // Toggle expansion\n    if (expandedGaps[gap.id]) {\n      // If already expanded, collapse it\n      const newExpandedGaps = {\n        ...expandedGaps\n      };\n      delete newExpandedGaps[gap.id];\n      setExpandedGaps(newExpandedGaps);\n      return;\n    }\n\n    // If the gap already has the necessary data, expand it\n    if (gap.daily_data && gap.intraday_data) {\n      setExpandedGaps(prev => ({\n        ...prev,\n        [gap.id]: gap\n      }));\n      return;\n    }\n\n    // Else, fetch the missing data\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        ticker,\n        date\n      } = gap;\n      if (!ticker || !date) {\n        console.warn('Gap lacks ticker or date, cannot fetch data.');\n        setError('Selected gap lacks ticker or date, unable to fetch data.');\n        return;\n      }\n      const dailyData = await fetchDailyData({\n        ticker,\n        start_date: date,\n        end_date: date\n      });\n      console.log('Fetched Daily Data:', dailyData);\n      const intradayData = await fetchIntradayData({\n        ticker,\n        date\n      });\n      console.log('Fetched Intraday Data:', intradayData);\n      const updatedGap = {\n        ...gap,\n        daily_data: dailyData,\n        intraday_data: intradayData\n      };\n      setGapData(prevGaps => prevGaps.map(g => g.id === gap.id ? updatedGap : g));\n      setExpandedGaps(prev => ({\n        ...prev,\n        [gap.id]: updatedGap\n      }));\n    } catch (error) {\n      console.error('Error fetching additional data for the selected gap:', error);\n      setError('Failed to fetch additional data for the selected gap.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Small Cap Gaps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(GapList, {\n      gaps: gapData,\n      onSelectGap: handleGapSelect,\n      expandedGaps: expandedGaps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7kiLNDsPQeZKkaHvamJWWme2je8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchForm","GapList","Chart","IntradayChart","fetchGapData","fetchDailyData","fetchIntradayData","v4","uuidv4","DateTime","jsxDEV","_jsxDEV","App","_s","gapData","setGapData","expandedGaps","setExpandedGaps","loading","setLoading","error","setError","handleSearch","searchParams","console","log","data","sortedData","sort","a","b","gap_percent","map","gap","id","handleGapSelect","newExpandedGaps","daily_data","intraday_data","prev","ticker","date","warn","dailyData","start_date","end_date","intradayData","updatedGap","prevGaps","g","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","gaps","onSelectGap","_c","$RefreshReg$"],"sources":["/home/corey/Desktop/Smallcapgaps/smallcapgaps/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SearchForm from './components/SearchForm';\nimport GapList from './components/GapList';\nimport Chart from './components/Chart';\nimport IntradayChart from './components/IntradayChart';\nimport './App.css';\nimport { fetchGapData, fetchDailyData, fetchIntradayData } from './api';\nimport { v4 as uuidv4 } from 'uuid'; // Ensure uuid is installed: npm install uuid\nimport { DateTime } from 'luxon';\n\nfunction App() {\n  const [gapData, setGapData] = useState([]);\n  const [expandedGaps, setExpandedGaps] = useState({}); // { [gapId]: gapObject }\n  const [loading, setLoading] = useState(false); // State for loading\n  const [error, setError] = useState(null); // State for errors\n\n  const handleSearch = async (searchParams) => {\n    console.log('Searching with params:', searchParams);\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await fetchGapData(searchParams);\n      console.log('Received data:', data);\n      \n      // Sort the data by gap_percent in descending order and assign unique IDs\n      const sortedData = data\n        .sort((a, b) => b.gap_percent - a.gap_percent)\n        .map(gap => ({ ...gap, id: uuidv4() })); // Assign unique ID\n      \n      setGapData(sortedData);\n      setExpandedGaps({}); // Reset expanded gaps on new search\n    } catch (error) {\n      console.error('Error fetching gap data:', error);\n      setError('Failed to fetch gap data.');\n      setGapData([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGapSelect = async (gap) => {\n    console.log('Gap clicked:', gap);\n    \n    // Toggle expansion\n    if (expandedGaps[gap.id]) {\n      // If already expanded, collapse it\n      const newExpandedGaps = { ...expandedGaps };\n      delete newExpandedGaps[gap.id];\n      setExpandedGaps(newExpandedGaps);\n      return;\n    }\n\n    // If the gap already has the necessary data, expand it\n    if (gap.daily_data && gap.intraday_data) {\n      setExpandedGaps(prev => ({ ...prev, [gap.id]: gap }));\n      return;\n    }\n\n    // Else, fetch the missing data\n    try {\n      setLoading(true);\n      setError(null);\n\n      const { ticker, date } = gap;\n\n      if (!ticker || !date) {\n        console.warn('Gap lacks ticker or date, cannot fetch data.');\n        setError('Selected gap lacks ticker or date, unable to fetch data.');\n        return;\n      }\n\n      const dailyData = await fetchDailyData({ ticker, start_date: date, end_date: date });\n      console.log('Fetched Daily Data:', dailyData);\n\n      const intradayData = await fetchIntradayData({ ticker, date });\n      console.log('Fetched Intraday Data:', intradayData);\n\n      const updatedGap = { \n        ...gap, \n        daily_data: dailyData, \n        intraday_data: intradayData \n      };\n\n      setGapData(prevGaps => prevGaps.map(g => g.id === gap.id ? updatedGap : g));\n      setExpandedGaps(prev => ({ ...prev, [gap.id]: updatedGap }));\n    } catch (error) {\n      console.error('Error fetching additional data for the selected gap:', error);\n      setError('Failed to fetch additional data for the selected gap.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Small Cap Gaps</h1>\n      <SearchForm onSearch={handleSearch} />\n      \n      {loading && <p>Loading...</p>}\n      {error && <p className=\"error\">{error}</p>}\n      \n      <GapList \n        gaps={gapData} \n        onSelectGap={handleGapSelect} \n        expandedGaps={expandedGaps} \n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}